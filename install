#!/usr/bin/env zsh

home_files=(".bash_profile" ".bashrc" ".gitconfig" ".profile" ".zprofile" ".zshenv" ".zshrc")
home_directories=(".ssh")
config_files=("starship.toml")
config_directories=("alacritty" "fish" "iterm2" "nvim" "pypoetry" "zed")

# install brew
if ! command -v brew > /dev/null; then
	echo "installing brew...";
	bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	echo "brew installed; run install again to continue";
	exit 0
fi


# install brew dependencies
if command -v brew > /dev/null; then
	if ! brew bundle check > /dev/null; then
		brew bundle install
	fi
fi


# install iterm2 shell integration
if [ ! -f $HOME/.iterm2_shell_integration.zsh ]; then
	echo; echo "installing iterm2 shell integration..."
	curl -L https://iterm2.com/shell_integration/zsh -o $HOME/.iterm2_shell_integration.zsh
fi


# make sure directories exist
if [ ! -d "$HOME/.config" ]; then
    mkdir "$HOME/.config"
fi

if [ ! -d "$HOME/.zsh-site-functions" ]; then
    mkdir "$HOME/.zsh-site-functions"
fi


# create symlinks
repo="$( cd "$( dirname "$0" )" && pwd )"

symlink_fn() {
	file_or_folder=$1
	target_dir=$2

	source="$repo/$file_or_folder"
	target="$target_dir/$file_or_folder"

	source_does_not_exist=0

	if [ ! -f $source ]; then
		if [ ! -d $source ]; then
			source_does_not_exist=1
		fi
	fi
	if [[ $source_does_not_exist = 1 ]]; then
		echo "'$source': file does not exist (ERROR)"
	else
		if [ -f $target ]; then
			if [ -L $target ]; then
				echo "'$target' already exists (symlink ok)"
			else
				echo "'$target' already exists (CONFLICT)"
			fi
		elif [ -d "$target" ]; then
			if [ -L $target ]; then
				echo "'$target' already exists (symlink ok)"
			else
				echo "'$target' already exists (CONFLICT)"
			fi
		else
			if command -v gln > /dev/null; then
				gln -svT $source $target
			else
				ln -sv $source $target
			fi
		fi
	fi
}

for file ("$home_files[@]"); do
	symlink_fn $file $HOME
done

for folder ("$home_directories[@]"); do
	symlink_fn $folder $HOME
done

for file ("$config_files[@]"); do
	symlink_fn $file $HOME/.config
done

for folder ("$config_directories[@]"); do
	symlink_fn $folder $HOME/.config
done


# configure iterm2
#if [[ -d "/Applications/iTerm.app" ]]; then
#    defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "$HOME/.config/iterm2"
#    defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
#fi

exit 0
